#pragma checksum "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/ChargeAffaire/ListCharge.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a4380269275ca560cd3024e0b0dd7ba12ebedf40"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ChargeAffaire_ListCharge), @"mvc.1.0.view", @"/Views/ChargeAffaire/ListCharge.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ChargeAffaire/ListCharge.cshtml", typeof(AspNetCore.Views_ChargeAffaire_ListCharge))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/_ViewImports.cshtml"
using CentreAffaire;

#line default
#line hidden
#line 2 "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/_ViewImports.cshtml"
using CentreAffaire.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a4380269275ca560cd3024e0b0dd7ba12ebedf40", @"/Views/ChargeAffaire/ListCharge.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eab26b4fa991501cef75f7d059ec96106868bd5f", @"/Views/_ViewImports.cshtml")]
    public class Views_ChargeAffaire_ListCharge : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Actif", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Conge", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formDate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "POST", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formAffectation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formAjout"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("Ajouter"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(52, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/ChargeAffaire/ListCharge.cshtml"
  
    ViewBag.Title = "ListCharge";

#line default
#line hidden
            BeginContext(92, 879, true);
            WriteLiteral(@"<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
<link href=""https://cdn.datatables.net/1.10.18/css/dataTables.bootstrap4.min.css"" rel=""stylesheet"">
<script type=""text/javascript"" src=""https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js""></script>
<script type=""text/javascript"" src=""https://cdn.datatables.net/1.10.18/js/dataTables.bootstrap4.min.js""></script>
<link href=""https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"" rel=""stylesheet"" integrity=""sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN"" crossorigin=""anonymous"">

<link href=""https://cdn.datatables.net/select/1.3.0/css/select.dataTables.min.css"" rel=""stylesheet"">
<script src=""https://cdn.datatables.net/select/1.3.0/js/dataTables.select.min.js""></script>

<div>
    <select onchange=""handleSelect()"">
        ");
            EndContext();
            BeginContext(971, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4380269275ca560cd3024e0b0dd7ba12ebedf406969", async() => {
                BeginContext(993, 6, true);
                WriteLiteral("Actifs");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1008, 9, true);
            WriteLiteral("\n        ");
            EndContext();
            BeginContext(1017, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4380269275ca560cd3024e0b0dd7ba12ebedf408328", async() => {
                BeginContext(1039, 8, true);
                WriteLiteral("En Cong√©");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1056, 1469, true);
            WriteLiteral(@"
    </select>

    <table id=""demoGrid"" class=""table  table table-hover dt-responsive nowrap"" width=""100%"" cellspacing=""0"">
        <thead class=""styleHeaderTab""></thead>
    </table>
    <!--modal consulter -->
    <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">

                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h3 class=""modal-title"" id=""exampleModalLabel"">Liste des comptes du charg√© <span class=""name""></span></h3>
                    <br/>
                </div>
                <div class=""modal-body"">
                    <table id=""consulterDTable"" class=");
            WriteLiteral(@"""table table-hover"">
                        <thead class=""styleHeaderTab"">
                        </thead>
                    </table>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Retour</button>

                </div>
            </div>
        </div>
    </div>
        <!--modal Date mission -->
    ");
            EndContext();
            BeginContext(2525, 1851, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4380269275ca560cd3024e0b0dd7ba12ebedf4011256", async() => {
                BeginContext(2559, 1810, true);
                WriteLiteral(@"
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""dateMission"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true""  >
            <div class=""modal-dialog"" role=""document"" style=""width:400px;"">
                <div class=""modal-content"">
                    <div class=""modal-header"">

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""exampleModalLabel"">Choisir la date de d√©but et fin de mission</h3>
                    </div>
                    <div class=""modal-body"">
                        <div class=""styleDate"">  
                            <div class=""dateFlex"">
                                <label fpr=""dateDeb"" style=""width:150px;"">Date de d√©but</label>
                                <input id=""da");
                WriteLiteral(@"teDeb"" type=""date"" name=""dateDeb"" required>
                            </div>
                            <div class=""dateFlex"">
                                <label fpr=""dateFin"" style=""width:150px;"">Date de Fin</label>
                                <input id=""dateFin"" type=""date"" name=""dateFin"" required>
                            </div>
                        </div>
                    </div>
                    
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>
                        <input type=""submit"" class=""btn btn-primary"" value=""Ajouter"">
                    </div>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4376, 3038, true);
            WriteLiteral(@" 

        <!--modal liste compte -->
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""listeCompte"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                    
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""exampleModalLabel"">Choisir les comptes</h3>
                    </div>
                    <div class=""modal-body"">
                        <table id=""compteTable"" class=""table table-hover"">
                            <thead class=""styleHeaderTab""></thead>
                        </table>
                    </div>
                    <div clas");
            WriteLiteral(@"s=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Retour</button>
                        <butto id =""secondScreen"" data-toggle=""modal"" data-target=""#listeInterimaire"" type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Suivant</button>

                    </div>
                </div>
            </div>
        </div>

        <!--modal liste interimaire -->
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""listeInterimaire"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </b");
            WriteLiteral(@"utton>
                        <h3 class=""modal-title"" id=""listeInterimaireLabel"">Choisir un int√©rimaire</h3>
                    </div>
                    <div class=""modal-body"">
                        <table id=""interimTable"" class=""table table-hover"">
                            <thead class=""styleHeaderTab""></thead>
                        </table>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>

                        <!--<button data-toggle=""modal"" data-target=""#exampleModal"" type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Affecter</button>
                        --><input id=""thirdScreen"" data-dismiss=""modal""  class=""btn btn-primary"" type=""submit"" value=""Ajouter"">
                    </div>
                </div>
            </div>
        </div>

    <!--modal Changement affectation -->
    ");
            EndContext();
            BeginContext(7414, 1791, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4380269275ca560cd3024e0b0dd7ba12ebedf4018144", async() => {
                BeginContext(7455, 1743, true);
                WriteLiteral(@"
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""changementAffectation"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""exampleModalLabel"">Choisir un charg√©</h3>
                    </div>
                    <div class=""modal-body"">
                        <table class=""table table-hover"">
                            <thead>
                                <tr class=""styleHeaderTab"">
                                    <th scope=""col""></th>
                                    <th scope=""col"">Matricule</th>
 ");
                WriteLiteral(@"                                   <th scope=""col"">Intitul√©</th>
                                    <th><input id=""hiddenValue"" type=""hidden"" name=""idCompte""></th>
                                </tr>
                            </thead>
                            <tbody id=""rowHolder2""></tbody>
                        </table>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>
                        <input class=""btn btn-danger"" type=""submit"" value=""Affecter"">
                    </div>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9205, 737, true);
            WriteLiteral(@"


    <!--modal Ajout compte -->
    <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""ajoutModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"" style=""width:500px;margin-top:150px;"">
            <div class=""modal-content"">
                <div class=""modal-header"">

                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h3 class=""modal-title"" id=""ajoutModalLabel"">Ajouter un compte</h3>
                </div>
                ");
            EndContext();
            BeginContext(9942, 1480, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4380269275ca560cd3024e0b0dd7ba12ebedf4022485", async() => {
                BeginContext(9994, 1421, true);
                WriteLiteral(@"
                    <div class=""modal-body flexbox-modal"">
                        <div class=""flexbox-modal-child"">
                            <span style=""height:32px;"">Code agence</span>
                            <span style=""height:32px;"">Num√©ro de compte</span>
                            <span style=""height:32px;"">Intitul√©</span>
                        </div>
                        <div class=""flexbox-modal-child"">
                            <span style=""height:30px;"">
                                <input id=""codeAgence"" name=""codeAgence"" type=""text"" style=""width:30px;"" required>
                            </span>
                            <span style=""height:30px;"">
                                <input id=""numCompte"" name=""numCompte"" type=""text"" style=""width:100px;"" required>
                            </span>
                            <span style=""height:30px;"">
                                <input id=""intitule"" name=""intitule"" type=""text"" style=""width:100px;"" required>
            ");
                WriteLiteral(@"                </span>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>

                        <input class=""btn btn-primary"" type=""submit"" value=""Ajouter"">
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11422, 9907, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>
        <!-- Modal Supression Compte -->
    <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade"" id=""SuppressionCompte"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" style=""width:350px;height:350px;margin-top:150px;"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h5 class=""modal-title"" id=""exampleModalLabel"" style=""margin-top:20px;margin-bottom:50px;"">Voulez-vous vraiment supprimer ce compte?</h5>
                    <div class=""btns"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>
                        <button id=""SupprimerBtn"" type=""button");
            WriteLiteral(@""" class=""btn btn-danger"">Supprimer</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    let language = {
            search: ""Rechercher"",
            lengthMenu: ""Afficher _MENU_ charg√©s par page"",
            info: ""Page: _PAGE_ / _PAGES_"",
            infoEmpty: """",
            infoFiltered: """",
            emptyTable: ""La liste est vide"",
            paginate: {
                next: """",
                previous: """"
            }
        }

    let dTable = $('#demoGrid').DataTable({
        columns: [
            {title: """",data: (row) => {
                if (row.conge.etat === ""Conge"" && row.tousInterimaire === false)
                    return '<i class=""fa fa-exclamation-triangle fa-2x red-color""></i>'
                return """"
            }},
            {title:""Matricule"",data: ""matricule""},
            {title:""Intitul√©"",data: ""intitule"",className: ""center-col""},
            {title:""Nombre de comptes"",data: (row) => {
        ");
            WriteLiteral(@"        return row.listComptes.length;
            },className: ""center-col""},
            {title: """",data: (row) => {
                if (row.conge.etat === ""Actif"")
                    return `<a class=""cls no-href"" id=""detail"" onclick=""getData(${row.id})"" data-toggle=""modal"" data-target=""#exampleModal"">Consulter</a>
                            <br/>
                            <a class=""no-href"" id=""conge"" onclick=""updateConge(${row.id})"" data-toggle=""modal"" data-target=""#dateMission"">Ajouter un cong√©</a>
                            <br/>
                            <a class=""no-href"" id=""ajout""  onclick=""updateAction(${row.id})"" data-toggle=""modal"" data-target=""#ajoutModal"">Ajouter un compte</a>
`;
                return `<a class=""cls no-href"" id=""detail"" onclick=""getData(${row.id})"" data-toggle=""modal"" data-target=""#exampleModal"">Consulter</a>
                        <br/>
                        <a class=""no-href"" id=""conge"" onclick=""updateConge(${row.id})"" data-toggle=""modal"" data-target=""#dateMission");
            WriteLiteral(@""">Modifier cong√©</a>
                        <br/>
                        <a class=""no-href"" id=""interim"" onclick=""updateInterimaire(${row.id})"" data-toggle=""modal"" data-target=""#listeCompte"">Ajouter un interimaire</a>`;
            },className: ""center-col color-col pointer-col""},
            
        ],
        language: language
    });

    let consulerDTable = $(""#consulterDTable"").DataTable({
        columns: [
            {title:""Code agence"",data: ""codeAgence""},
            {title:""Num√©ro de compte"",data: ""numeroCompte""},
            {title:""Intitul√©"",data:""intitule""},
            {title:""Int√©rimaire"",data: ""interimaire.intitule""},
            {title: """",data: (row) => {
                return `<a class=""no-href"" onclick=""updateSuppression(${row.charge.id},${row.id})"" data-toggle=""modal"" data-target=""#SuppressionCompte"">Supprimer compte</a>
                        <br/>
                        <a class=""no-href"" onclick=""updateAffectation(${row.charge.id},${row.id})"" data-toggle=""modal"" data-target=""");
            WriteLiteral(@"#changementAffectation"">Affecter compte</a>`;
            },className: ""center-col color-col pointer-colx""}
        ],
        language: {
            ...language,
            lengthMenu: ""Afficher _MENU_ comptes par page""
            }
    });
    
    let compteTable = $(""#compteTable"").DataTable({

        columns: [
           {
               title: ""Tout s√©l√©ctionner"",
               data: () => """",
               className: ""selectAll"",
           },
           {
               title: ""Code Agence"",
               data: ""codeAgence"",
           },
           {
               title: ""Num√©ro de Compte"",
               data: ""numeroCompte"",
           },
           {
               title: ""Intitul√©"",
               data: ""intitule"",
           },
           {
               title: ""Int√©rimaire"",
               data: (row) => {
                   if (row.charge.id !== row.interimaire.id)
                       return row.interimaire.intitule;
                   return """";
               },
           },
  ");
            WriteLiteral(@"     ],
       select: {
           style: ""multi"",
           info: false,
       },
   });

   let interimTable = $(""#interimTable"").DataTable({
       columns: [
            {
                title: ""Matricule"",
                data: ""matricule"",
            },
            {
                title: ""Intitul√©"",
                data: ""intitule"",
            }
       ],
       select: {
            style: ""single"",
            info: false,
        },
   });

</script>
<script>


    $(document).ready(() => getActif());

    function updateConge(id) {
        $(""#formDate"").prop(""action"",`/ChargeAffaire/UpdateConge/${id}`);
    }

    $(""input[type=date]"").prop(""min"",new Date().toISOString().split('T')[0]);

    function handleSelect() {
        if ($(""select"").val() === ""Actif"")
            getActif();
        else
            getConge();
    }

    function getActif() {
        $.get('/ChargeAffaire/GetActif',(res) =>{
            dTable.clear();
            dTable.rows.add(res);
            dTable.draw();
  ");
            WriteLiteral(@"      });    }

    function getConge() {
        $.get('/ChargeAffaire/GetConge',(res) =>{
            dTable.clear();
            dTable.rows.add(res);
            dTable.draw();
        });
    }

    function getData(id) { 
  
        $.get(`/ChargeAffaire/Consulter/${id}`,(res) => {
            consulerDTable.clear();
            consulerDTable.rows.add(res);
            consulerDTable.draw();
        });

        $.get(`/ChargeAffaire/GetName/${id}`,(res) => {
            $("".name"").text(res);
        });
    }
    function updateSuppression(idCharge,idCompte) {
        $(""#SupprimerBtn"").click(() => window.location.href = `/ChargeAffaire/Supprimer/${idCharge}?idCompte=${idCompte}`);
    }
    function updateAffectation(idCharge,idCompte) {
        $(""#formAffectation"").prop(""action"",`/ChargeAffaire/Affecter/${idCharge}`);
        $(""#hiddenValue"").prop(""value"",idCompte);
        $.ajax({
            url: `/ChargeAffaire/Remplacant/${idCharge}`,
            method: 'post',
            dataType: 'json',
");
            WriteLiteral(@"            error: (err) => console.log(err),
            success: (res) => {
                let s = '';
                if (res.length!==0){
                    for (let i=0;i<res.length;i++){
                        s+= `<tr>
                                <td>
                                    <input type=""radio"" name=""idCharge"" value=${res[i].id}>
                                </td>
                                <td>
                                    ${res[i].matricule}
                                </td>
                                <td>
                                    ${res[i].intitule}f
                                </td>
                            </tr>`;
                    }
                }
                $(""#rowHolder2"").html(s);
            }
        });
    }

    function update_urlClose()
    {
        history.pushState(null, null, ""/ChargeAffaire/ListCharge"");
    }

    function updateAction(id) {
        $(""#formAjout"").prop(""action"",""Ajouter/""+id);
    }

    functi");
            WriteLiteral(@"on updateInterimaire(id){
        checkComptes(id);
    }
    function checkComptes(id) {
        history.pushState(null,null,`/ChargeAffaire/CheckComptes/${id}`);
        checkAll();
        
        $.get(`/ChargeAffaire/CheckComptes/${id}`,(res) => {
           compteTable.clear();
           compteTable.rows.add(res);
           compteTable.draw();
       });


        $(""#secondScreen"").click(() => selectInterim(id));
    }

    function selectInterim(id) {
        history.pushState(null,null,`/ChargeAffaire/SelectInterim/${id}`);
        $.get(`/ChargeAffaire/SelectInterim/${id}`,(res) => {
            interimTable.clear();
            interimTable.rows.add(res);
            interimTable.draw();
        });

        $(""#thirdScreen"").click(() => {
            let d = compteTable.rows({selected: true}).data();
            if (d.length === 0)
                abort();
            let ids = [];
            for (let i=0;i<d.length;i++)
                ids.push(d[i].id);
            let idC = interimTable.row");
            WriteLiteral(@"({selected: true}).data().id;
            $.post(`/ChargeAffaire/Interimaire`,{id:id,idsCompte:ids,idCharge:idC});
        });
    }
    function checkAll(){
        compteTable.on(""click"",""th.selectAll"",() => {
            if ($(""th.selectAll"").hasClass(""selected"")){
                compteTable.rows().deselect();
                $(""th.selectAll"").removeClass(""selected"");
            }
            else {
                compteTable.rows().select();
                $(""th.selectAll"").addClass(""selected"");
            }
        });
    }
    function abort() {
        $(""#listeInterimaire"").modal(""hide"");
        $(""#listeCompte"").modal(""show"");
        return false;
    }  

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
