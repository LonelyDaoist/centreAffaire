#pragma checksum "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/ChargeAffaire/ListCharge.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "46802774724de59e06691cdd138b1a0585b908e5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ChargeAffaire_ListCharge), @"mvc.1.0.view", @"/Views/ChargeAffaire/ListCharge.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ChargeAffaire/ListCharge.cshtml", typeof(AspNetCore.Views_ChargeAffaire_ListCharge))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/_ViewImports.cshtml"
using CentreAffaire;

#line default
#line hidden
#line 2 "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/_ViewImports.cshtml"
using CentreAffaire.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"46802774724de59e06691cdd138b1a0585b908e5", @"/Views/ChargeAffaire/ListCharge.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eab26b4fa991501cef75f7d059ec96106868bd5f", @"/Views/_ViewImports.cshtml")]
    public class Views_ChargeAffaire_ListCharge : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Actif", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Conge", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formDate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "POST", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formInterimaire"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formAffectation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formAjout"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("Ajouter"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(52, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "/home/LonelyDaoist/Documents/selfStudy/projects/CentreAffaire/Views/ChargeAffaire/ListCharge.cshtml"
  
    ViewBag.Title = "ListCharge";

#line default
#line hidden
            BeginContext(92, 467, true);
            WriteLiteral(@"<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
<link href=""https://cdn.datatables.net/1.10.18/css/dataTables.bootstrap4.min.css"" rel=""stylesheet"">
<script type=""text/javascript"" src=""https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js""></script>
<script type=""text/javascript"" src=""https://cdn.datatables.net/1.10.18/js/dataTables.bootstrap4.min.js""></script>

<div>
    <select onchange=""handleSelect()"">
        ");
            EndContext();
            BeginContext(559, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46802774724de59e06691cdd138b1a0585b908e56894", async() => {
                BeginContext(581, 6, true);
                WriteLiteral("Actifs");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(596, 9, true);
            WriteLiteral("\n        ");
            EndContext();
            BeginContext(605, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46802774724de59e06691cdd138b1a0585b908e58251", async() => {
                BeginContext(627, 8, true);
                WriteLiteral("En Cong√©");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(644, 1835, true);
            WriteLiteral(@"
    </select>

    <table id=""demoGrid"" class=""table  table table-hover dt-responsive nowrap"" width=""100%"" cellspacing=""0""> </table>
    <!--modal consulter -->
    <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">

                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h3 class=""modal-title"" id=""exampleModalLabel"">Liste des comptes du charg√© <span class=""name""></span></h3>
                    <br/>
                </div>
                <div class=""modal-body"">
                    <table class=""table table-hover"">
                        <thead>
                   ");
            WriteLiteral(@"         <tr class=""styleHeaderTab"">
                                <th scope=""col"">Code agence</th>
                                <th scope=""col"">Num√©ro de compte</th>
                                <th scope=""col"">Intitul√©</th>
                                <th scope=""col"">Int√©rimaire</th>
                                <th scope=""col""></th>
                            </tr>
                        </thead>
                        <tbody id=""rowHolder""></tbody>
                    </table>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Retour</button>

                </div>
            </div>
        </div>
    </div>
        <!--modal Date mission -->
    ");
            EndContext();
            BeginContext(2479, 1833, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46802774724de59e06691cdd138b1a0585b908e511551", async() => {
                BeginContext(2513, 1792, true);
                WriteLiteral(@"
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""dateMission"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true""  >
            <div class=""modal-dialog"" role=""document"" style=""width:400px;"">
                <div class=""modal-content"">
                    <div class=""modal-header"">

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""exampleModalLabel"">Choisir la date de d√©but et fin de mission</h3>
                    </div>
                    <div class=""modal-body"">
                        <div class=""styleDate"">  
                            <div class=""dateFlex"">
                                <label fpr=""dateDeb"" style=""width:150px;"">Date de d√©but</label>
                                <input id=""da");
                WriteLiteral(@"teDeb"" type=""date"" name=""dateDeb"">
                            </div>
                            <div class=""dateFlex"">
                                <label fpr=""dateFin"" style=""width:150px;"">Date de Fin</label>
                                <input id=""dateFin"" type=""date"" name=""dateFin"">
                            </div>
                        </div>
                    </div>
                    
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>
                        <input type=""submit"" class=""btn btn-primary"" value=""Ajouter"">
                    </div>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4312, 11, true);
            WriteLiteral(" \n\n        ");
            EndContext();
            BeginContext(4323, 4075, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46802774724de59e06691cdd138b1a0585b908e515183", async() => {
                BeginContext(4350, 4041, true);
                WriteLiteral(@"
        <!--modal liste compte -->
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""listeCompte"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                    
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""exampleModalLabel"">Choisir les comptes</h3>
                    </div>
                    <div class=""modal-body"">
                        <table class=""table table-hover"">
                            <thead>
                                <tr class=""styleHeaderTab"">
                                    <th scope=""col"">
                          ");
                WriteLiteral(@"              <input onclick=""checkAll()"" type=""checkbox"" class=""form-check-input"" id=""allCheck"">
                                        <label class=""form-check-label"" for=""allCheck"">S√©lectionner tout</label>
                                    </th>
                                    <th scope=""col"">Code agence</th>
                                    <th scope=""col"">Num√©ro de compte</th>
                                    <th scope=""col"">Intitul√©</th>

                                </tr>
                            </thead>
                            <tbody id=""rowHolder4""></tbody>
                        </table>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Retour</button>
                        <button id =""secondScreen"" data-toggle=""modal"" data-target=""#listeInterimaire"" type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Suivant</button>

  ");
                WriteLiteral(@"                  </div>
                </div>
            </div>
        </div>

        <!--modal liste interimaire -->
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""listeInterimaire"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""listeInterimaireLabel"">Choisir un int√©rimaire</h3>
                    </div>
                    <div class=""modal-body"">
                        <table class=""table table-hover"">
                            <thead>
                                <tr class=""styleHeaderTab"">
");
                WriteLiteral(@"                                    <th scope=""col""></th>
                                    <th scope=""col"">Matricule</th>
                                    <th scope=""col"">Intitul√©</th>

                                </tr>
                            </thead>
                            <tbody id=""rowHolder3""></tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>

                        <!--<button data-toggle=""modal"" data-target=""#exampleModal"" type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Affecter</button>
                        --><input id=""thirdScreen""  class=""btn btn-primary"" type=""submit"" value=""Ajouter"">
                    </div>
                </div>
            </div>
        </div>
       ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8398, 48, true);
            WriteLiteral(" \n\n    <!--modal Changement affectation -->\n    ");
            EndContext();
            BeginContext(8446, 1791, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46802774724de59e06691cdd138b1a0585b908e521060", async() => {
                BeginContext(8487, 1743, true);
                WriteLiteral(@"
        <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""changementAffectation"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                        <h3 class=""modal-title"" id=""exampleModalLabel"">Choisir un charg√©</h3>
                    </div>
                    <div class=""modal-body"">
                        <table class=""table table-hover"">
                            <thead>
                                <tr class=""styleHeaderTab"">
                                    <th scope=""col""></th>
                                    <th scope=""col"">Matricule</th>
 ");
                WriteLiteral(@"                                   <th scope=""col"">Intitul√©</th>
                                    <th><input id=""hiddenValue"" type=""hidden"" name=""idCompte""></th>
                                </tr>
                            </thead>
                            <tbody id=""rowHolder2""></tbody>
                        </table>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>
                        <input class=""btn btn-danger"" type=""submit"" value=""Affecter"">
                    </div>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10237, 737, true);
            WriteLiteral(@"


    <!--modal Ajout compte -->
    <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade modalStyle"" id=""ajoutModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"" style=""width:500px;margin-top:150px;"">
            <div class=""modal-content"">
                <div class=""modal-header"">

                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"" onclick=""update_urlClose()"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <h3 class=""modal-title"" id=""ajoutModalLabel"">Ajouter un compte</h3>
                </div>
                ");
            EndContext();
            BeginContext(10974, 1453, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "46802774724de59e06691cdd138b1a0585b908e525403", async() => {
                BeginContext(11026, 1394, true);
                WriteLiteral(@"
                    <div class=""modal-body flexbox-modal"">
                        <div class=""flexbox-modal-child"">
                            <span style=""height:32px;"">Code agence</span>
                            <span style=""height:32px;"">Num√©ro de compte</span>
                            <span style=""height:32px;"">Intitul√©</span>
                        </div>
                        <div class=""flexbox-modal-child"">
                            <span style=""height:30px;"">
                                <input id=""codeAgence"" name=""codeAgence"" type=""text"" style=""width:30px;"">
                            </span>
                            <span style=""height:30px;"">
                                <input id=""numCompte"" name=""numCompte"" type=""text"" style=""width:100px;"">
                            </span>
                            <span style=""height:30px;"">
                                <input id=""intitule"" name=""intitule"" type=""text"" style=""width:100px;"">
                            </span>
   ");
                WriteLiteral(@"                     </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>

                        <input class=""btn btn-primary"" type=""submit"" value=""Ajouter"">
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12427, 12377, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>
        <!-- Modal Supression Compte -->
    <div data-backdrop=""static"" data-keyboard=""false"" class=""modal fade"" id=""SuppressionCompte"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" style=""width:350px;height:350px;margin-top:150px;"">
            <div class=""modal-content"">
                <div class=""modal-header"">

                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                    <div>
                        <h5 class=""modal-title"" id=""exampleModalLabel"" style=""margin-top:20px;margin-bottom:50px;"">Voulez-vous vraiment supprimer ce compte?</h5>
                        <center>
                            <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""update_urlClose()"">Annuler</button>
                            <butt");
            WriteLiteral(@"on id=""SupprimerBtn"" type=""button"" class=""btn btn-danger"">Supprimer</button>
                        </center>

                    </div>
                </div>



            </div>
        </div>
    </div>

</div>

<script>

    let dTable = $('#demoGrid').DataTable({
        columns: [
            {title:""Matricule"",data: ""matricule""},
            {title:""Intitul√©"",data: ""intitule""},
            {title:""Nombre des comptes"",data: () => ""59""},
            {title: """",data: (row) => {
                if (row.conge.etat === ""Actif"")
                    return `<a class=""cls no-href"" id=""detail"" onclick=""update_url('consulter/${row.id}')"" data-toggle=""modal"" data-target=""#exampleModal"">consulter</a>
                            <br/>
                            <a class=""no-href"" id=""conge"" onclick=""updateConge(${row.id})"" data-toggle=""modal"" data-target=""#dateMission"">Ajouter un cong√©</a>
                            <br/>
                            <a class=""no-href"" id=""ajout""  onclick=""updateAction(${row.id");
            WriteLiteral(@"})"" data-toggle=""modal"" data-target=""#ajoutModal"">Ajouter un compte</a>
`;
                return `<a class=""cls no-href"" id=""detail"" onclick=""update_url('consulter/${row.id}')"" data-toggle=""modal"" data-target=""#exampleModal"">consulter</a>
                        <br/>
                        <a class=""no-href"" id=""conge"" onclick=""updateConge(${row.id})"" data-toggle=""modal"" data-target=""#dateMission"">Modifier cong√©</a>
`;
            }}
        ],
        language: {
            search: ""Rechercher"",
            lengthMenu: ""Afficher _MENU_ charg√©s par page"",
            info: ""Page: _PAGE_ / _PAGES_"",
            paginate: {
                next: ""Suivante"",
                previous: ""Pr√©c√©dente""
            }
        }
    });
    $(document).ready(() => getActif());
    
</script>
<script>

    function updateConge(id) {
        $(""#formDate"").prop(""action"",`/ChargeAffaire/UpdateConge/${id}`);
    }

    $(""input[type=date]"").prop(""min"",new Date().toISOString().split('T')[0]);

    function handleSelect() ");
            WriteLiteral(@"{
        if ($(""select"").val() === ""Actif"")
            getActif();
        else
            getConge();
    }

    function getActif() {
        $.get('/ChargeAffaire/GetActif',(res) =>{
            dTable.clear();
            dTable.rows.add(res);
            dTable.draw();
        });
        /*$.ajax({
            url: '/ChargeAffaire/GetActif',
            method: 'get',
            dataType: 'json',
            error: (err) => console.log(err),
            success: (res) => {
                let s="""";
                for (let i=0;i<res.length;i++) {
                    s +=`<tr>
                            <td>${res[i].matricule}</td>
                            <td>${res[i].intitule}</td>
                            <td> 59</td>
                            <td id=""linkContainer"">
                                <a class=""cls no-href"" id=""detail"" onclick=""update_url('consulter/${res[i].id}')"" data-toggle=""modal"" data-target=""#exampleModal"">consulter</a>
                                <br/>
           ");
            WriteLiteral(@"                     <a class=""no-href"" id=""conge"" onclick=""updateConge(${res[i].id})"" data-toggle=""modal"" data-target=""#dateMission"">Ajouter un cong√©</a>
                                <br/>
                                <a class=""no-href"" id=""ajout""  onclick=""updateAction(${res[i].id})"" data-toggle=""modal"" data-target=""#ajoutModal"">Ajouter un compte</a>
                            </td>
                        </tr>`;
                }
                $(""#chargeHolder"").html(s);
                $("".no-href"").css({""cursor"":""pointer"",""color"":""#077bb1""});
                $("".no-href"").parent().css(""text-align"",""center"");

            }
        });*/
    }

    function getConge() {
        $.get('/ChargeAffaire/GetConge',(res) =>{
            dTable.clear();
            dTable.rows.add(res);
            dTable.draw();
        });

        /*$.ajax({
            url: '/ChargeAffaire/GetConge',
            method: 'get',
            dataType: 'json',
            error: (err) => console.log(err),
            s");
            WriteLiteral(@"uccess: (res) => {
                let s="""";
                for (let i=0;i<res.length;i++) {
                    s +=`<tr>
                            <td>${res[i].matricule}</td>
                            <td>${res[i].intitule}</td>
                            <td> 59</td>
                            <td id=""linkContainer"">
                                <a class=""cls no-href"" id=""detail"" onclick=""update_url('consulter/${res[i].id}')"" data-toggle=""modal"" data-target=""#exampleModal"">consulter</a>
                                <br/>
                                <a class=""no-href"" id=""conge"" onclick=""updateConge(${res[i].id})"" data-toggle=""modal"" data-target=""#dateMission"">Modifier cong√©</a>
                            </td>
                        </tr>`;
                }
                $(""#chargeHolder"").html(s);
                $("".no-href"").css({""cursor"":""pointer"",""color"":""#077bb1""});
                $("".no-href"").parent().css(""text-align"",""center"");

            }
        });*/
    }

    functi");
            WriteLiteral(@"on getData() { 
        var pathArray = window.location.pathname.split('/');
        var secondLevelLocation = pathArray[3];
        
        $.ajax({
            
            url: ""/ChargeAffaire/consulter/"" + secondLevelLocation,
            method: 'post',
            dataType: 'json',
            error: (err) => console.log(err),
            success: function (csResponse) {
                $("".name"").text(csResponse.item1);
                let s = """";
                if (csResponse.item2.length !== 0){

                    console.log(csResponse);

                    for (let i=0;i<csResponse.item2.length;i++){
                        s +=`<tr>
                                <td>${csResponse.item2[i].codeAgence}</td>
                                <td>${csResponse.item2[i].numeroCompte}</td>
                                <td>${csResponse.item2[i].intitule}</td>
                                <td>${csResponse.item2[i].interimaire.intitule}</td>
                                <td>
                   ");
            WriteLiteral(@"                 <a class=""no-href"" onclick=""updateSuppression(${csResponse.item2[i].charge.id},${csResponse.item2[i].id})"" data-toggle=""modal"" data-target=""#SuppressionCompte"">Supprimer compte</a>
                                    <br/>
                                    <a class=""no-href"" onclick=""updateAffectation(${csResponse.item2[i].charge.id},${csResponse.item2[i].id})"" data-toggle=""modal"" data-target=""#changementAffectation"">Affecter compte</a>
                                </td>
                            </tr>`;
                    }
                }
                    
                $(""#rowHolder"").html(s);
                $("".no-href"").css({""cursor"":""pointer"",""color"":""#077bb1""});
                $("".no-href"").parent().css(""text-align"",""center"");

            }
        
            
        });
    }
    function updateSuppression(idCharge,idCompte) {
        $(""#SupprimerBtn"").click(() => window.location.href = `/ChargeAffaire/Supprimer/${idCharge}?idCompte=${idCompte}`);
    }
    funct");
            WriteLiteral(@"ion updateAffectation(idCharge,idCompte) {
        $(""#formAffectation"").prop(""action"",`/ChargeAffaire/Affecter/${idCharge}`);
        $(""#hiddenValue"").prop(""value"",idCompte);
        $.ajax({
            url: `/ChargeAffaire/Remplacant/${idCharge}`,
            method: 'post',
            dataType: 'json',
            error: (err) => console.log(err),
            success: (res) => {
                //console.log(res);
                let s = '';
                if (res.length!==0){
                    for (let i=0;i<res.length;i++){
                        s+= `<tr>
                                <td>
                                    <input type=""radio"" name=""idCharge"" value=${res[i].id}>
                                </td>
                                <td>
                                    ${res[i].matricule}
                                </td>
                                <td>
                                    ${res[i].intitule}f
                                </td>
                    ");
            WriteLiteral(@"        </tr>`;
                    }
                }
                $(""#rowHolder2"").html(s);
            }
        });
    }

    function update_url(url) {
        history.pushState(null, null, url);
        getData();
    }
    function update_urlClose()
    {
        history.pushState(null, null, ""/ChargeAffaire/ListCharge"");
    }

    function updateAction(id) {
        $(""#formAjout"").prop(""action"",""Ajouter/""+id);
    }

    function updateInterimaire(id){
        $(""#formInterimaire"").prop(""action"",`/ChargeAffaire/Interimaire/${id}`);
        checkComptes(id);
    }
    function checkComptes(id) {
        history.pushState(null,null,`/ChargeAffaire/CheckComptes/${id}`);
        $(""#allCheck"").prop(""checked"",false);
        
        $.ajax({
            url:`/ChargeAffaire/CheckComptes/${id}`,
            method: 'get',
            dataType: 'json',
            error: (err) => console.log(err),
            success: (res) =>   {
                let s = """";
                for (let i=0;i<res.length;i");
            WriteLiteral(@"++){
                    s+= `<tr>
                            <td>
                                <input value=""${res[i].id}"" name=""idsCompte"" type=""checkbox"" class=""checkChild form-check-input"" id=""exampleCheck1"">
                                <label class=""form-check-label"" for=""exampleCheck1""></label>
                            </td>
                            <td>
                                ${res[i].codeAgence}
                            </td>
                            <td>
                                ${res[i].numeroCompte}
                            </td>
                            <td>
                                ${res[i].intitule}
                            </td>
                        </tr>`;
                }
                $(""#rowHolder4"").html(s);
            }
            
        });
        $(""#secondScreen"").click(() => selectInterim(id));
    }

    function checkAll() {
        let state = $(""#allCheck"").prop(""checked"");
        //console.log(state);
        $("".che");
            WriteLiteral(@"ckChild"").prop(""checked"",state);
    }

    function selectInterim(id) {
        history.pushState(null,null,`/ChargeAffaire/SelectInterim/${id}`);
        $.ajax({
            url:`/ChargeAffaire/SelectInterim/${id}`,
            method: 'get',
            dataType: 'json',
            error: (err) => console.log(err),
            success: (res) =>   {
                let s = """";
                for (let i=0;i<res.length;i++){
                    s+= `<tr>
                            <td>
                                <input type=""radio"" name=""idCharge"" value=""${res[i].id}"">
                            </td>
                            <td>
                                ${res[i].matricule}
                            </td>
                            <td>
                                ${res[i].intitule}
                            </td>
                        </tr>`;
                }
                $(""#rowHolder3"").html(s);
            }
        });
    }
    $("".no-href"").css({""cursor"":""pointer"",""c");
            WriteLiteral("olor\":\"#077bb1\"});\n    $(\".no-href\").parent().css(\"text-align\",\"center\");\n    \n\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
